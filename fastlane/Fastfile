update_fastlane

package = load_json(json_path: "./package.json")
version = package["version"]
app = load_json(json_path: "./app.json")
appName = app["name"]
xcodeproj = "./ios/" + appName +".xcodeproj"
workspace = "./ios/" + appName +".xcworkspace"

ENV["DEVELOPER_DIR"] = "/Applications/Xcode.app"

platform :android do
  desc "Submit a new Beta Build to Google Play Store Beta"
  lane :beta do
    increment_version_code(
      gradle_file_path: "android/app/build.gradle",
    )
    gradle(
      project_dir: "android",
      task: "clean bundle",
      flavor: "prod",
      build_type: "Release",
    )
    notification(subtitle: appName+" for Android", message: "Build complete")
    upload_to_play_store(
      track: "beta",
    )
    notification(subtitle: appName+" for Android", message: "Upload complete")
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(
      project_dir: "android",
      task: "clean assembleRelease",
    )
    upload_to_play_store
  end
end

platform :ios do
  
  desc "iOS: Push a new beta build to TestFlight"
  lane :beta do
    sync_code_signing(type: "appstore")
    increment_build_number_in_xcodeproj(
      xcodeproj: xcodeproj,
      target: appName,
    )
    build_app(
      workspace: workspace,
      scheme: appName,
    )
    notification(subtitle: appName+" for iOS", message: "Build complete")
    upload_to_testflight(
      skip_waiting_for_build_processing: false,
    )
    notification(subtitle: appName+" for iOS", message: "Upload complete")
  end
  
  lane :screenshots do
    # reset_simulators
    capture_screenshots(
      reinstall_app: true,
      stop_after_first_error: true,
      workspace: workspace,
    )
    frame_screenshots
    # upload_to_app_store
  end
end

desc "iOS: Bump version"
private_lane :iosVersionBump do
  increment_version_number_in_xcodeproj(
    version_number: version,
    xcodeproj: xcodeproj,
    target: appName,
  )
end

desc "Bump version"
lane :versionBump do
  iosVersionBump
end
